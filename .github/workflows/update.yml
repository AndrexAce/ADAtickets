name: Tag, containerize and update
on:
  workflow_run:
    workflows: ["Build, test and analyze"]
    types: 
    - completed

jobs:
  update:
    runs-on: ubuntu-latest
    name: Tag, containerize and update
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Cache NuGet packages
        id: cache-nuget-packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Set up Git
        run: |
          git config user.name "Andrea Lucchese"
          git config user.email "andrylook14@gmail.com"
      
      - name: Get Installer version
        run: echo "VERSION=v$(cat ADAtickets.Installer/VERSION)" >> $GITHUB_ENV

      - name: Push tag if it doesn't already exist
        run: |
          if ! git ls-remote --tags origin | grep -q "refs/tags/${{ env.VERSION }}$"; then
            git tag ${{ env.VERSION }}
            git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git
            git push origin ${{ env.VERSION }}
          else
            echo "Tag ${{ env.VERSION }} already exists. Skipping tag creation."
          fi
      
      - name: Build and pack NuGet package
        run: |
          dotnet build "ADAtickets.Client" --configuration Release
          dotnet pack "ADAtickets.Client" --configuration Release --no-build --output ./nupkg
      
      - name: Publish NuGet package to GitHub Packages
        run: |
          dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.PAT }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          dotnet nuget push "./nupkg/*.nupkg" --source "github" --api-key ${{ secrets.PAT }} --skip-duplicate
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}
      
      - name: Get API version
        run: echo "API_VERSION=v$(cat ADAtickets.ApiService/VERSION)" >> $GITHUB_ENV

      - name: Build and push API
        uses: docker/build-push-action@v6
        with:
          build-args: BUILD_CONFIGURATION=Release
          context: .
          file: ADAtickets.ApiService/Dockerfile
          push: true
          tags: |
            ghcr.io/andrexace/adatickets-api:latest
            ghcr.io/andrexace/adatickets-api:${{ env.API_VERSION }}

      - name: Get Web version
        run: echo "WEB_VERSION=v$(cat ADAtickets.Web/VERSION)" >> $GITHUB_ENV

      - name: Build and push web app
        uses: docker/build-push-action@v6
        with:
          build-args: BUILD_CONFIGURATION=Release
          context: .
          file: ADAtickets.Web/Dockerfile
          push: true
          tags: |
            ghcr.io/andrexace/adatickets-web:latest
            ghcr.io/andrexace/adatickets-web:${{ env.WEB_VERSION }}
