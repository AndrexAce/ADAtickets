<!-- ADAtickets is a simple, lightweight, open source ticketing system
interacting with your enterprise repositories on Azure DevOps
with a two-way synchronization.
Copyright (C) 2025  Andrea Lucchese

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.-->
@using System.Globalization
@inject IJSRuntime JS
@inject NavigationManager Navigation

<FluentSelect TOption="CultureInfo"
    Items="supportedCultures"
    OptionText="@(c => c.DisplayName)"
    OptionValue="@(c => c.Name)"
    OptionSelected="@(c => c == selectedCulture)"
    @bind-SelectedOption="@selectedCulture"
    @bind-SelectedOption:after="ApplySelectedCulture" />

@code
{
    private readonly CultureInfo[] supportedCultures =
    [
        new CultureInfo("en-US"),
        new CultureInfo("it-IT")
    ];

    private CultureInfo? selectedCulture;

    protected override void OnInitialized()
    {
        selectedCulture = CultureInfo.CurrentCulture;
    }

    private void ApplySelectedCulture()
    {
        if (CultureInfo.CurrentCulture != selectedCulture && selectedCulture != null)
        {
            var uri = new Uri(Navigation.Uri)
                .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
            var cultureEscaped = Uri.EscapeDataString(selectedCulture.Name);
            var uriEscaped = Uri.EscapeDataString(uri);

            Navigation.NavigateTo(
                $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
                forceLoad: true);
        }
    }
}