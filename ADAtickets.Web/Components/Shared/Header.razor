<!-- ADAtickets is a simple, lightweight, open source ticketing system
interacting with your enterprise repositories on Azure DevOps
with a two-way synchronization.
Copyright (C) 2025  Andrea Lucchese

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.-->
@inherits ComponentBase

@using System.Security.Claims
@using ADAtickets.Client.Extensions
@using ADAtickets.Shared.Constants
@using ADAtickets.Shared.Extensions
@using ADAtickets.Web.Components.Utilities
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.Identity.Abstractions

@inject IDialogService dialogService
@inject IStringLocalizer<Header> loc
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject IDownstreamApi downstreamApi
@inject IConfiguration configuration

<FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="20">
    @if (IsDarkThemeActive)
    {
        <a href="/my-tickets">
            <img class="logo-icon" src="Images/Logos/LogoDark.svg" alt="@loc["ADAticketsLogoAlt"]" />
        </a>
    }
    else
    {
        <a href="/my-tickets">
            <img class="logo-icon" src="Images/Logos/LogoLight.svg" alt="@loc["ADAticketsLogoAlt"]" />
        </a>
    }
    <FluentLabel Typo="Typography.Header" Color="Color.Fill">ADAtickets</FluentLabel>
    <FluentSpacer />
    <FluentProfileMenu FullName="@accountName" ImageSize="5rem" EMail="@accountEmail" HeaderLabel="@loc["HeaderLabel"]" OnHeaderButtonClick="SignOutAsync" HeaderButton="@loc["HeaderButton"]" FooterLink="@loc["FooterLink"]" OnFooterLinkClick="OpenEditProfilePanel">
        <StartTemplate>@accountName</StartTemplate>
    </FluentProfileMenu>
    <FluentButton Appearance="Appearance.Neutral" IconStart="@(new Icons.Regular.Size20.Alert())"/>
</FluentStack>

@code {
    [CascadingParameter]
    private bool IsDarkThemeActive { get; set; }

    private string? accountName;
    private string? accountEmail;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.IsAuthenticated())
            {
                accountName = user.GetFullName();
                accountEmail = user.GetEmail();

                StateHasChanged();
            }
        }
    }

    private async Task SignOutAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.IsAuthenticated())
        {
            navigationManager.NavigateTo("CustomAccount/SignOut", true);
        }
    }

    private async Task OpenEditProfilePanel()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        await dialogService.ShowPanelAsync<ProfileEditPanel>(user, Dialogs.PanelParameters());
    }
}