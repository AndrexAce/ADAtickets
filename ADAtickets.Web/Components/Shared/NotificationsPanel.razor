<!-- ADAtickets is a simple, lightweight, open source ticketing system
interacting with your enterprise repositories on Azure DevOps
with a two-way synchronization.
Copyright (C) 2025  Andrea Lucchese

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.-->
@implements IDialogContentComponent<ClaimsPrincipal>
@using System.Security.Claims
@using ADAtickets.Client
@using ADAtickets.Shared.Dtos.Responses
@using ADAtickets.Web.Components.Utilities
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Regular
@using static ADAtickets.Web.Components.Utilities.Dialogs

@inject IStringLocalizer<NotificationsPanel> loc
@inject NotificationsClient notificationsClient

<FluentDialogHeader ShowDismiss="false" ShowDismissTooltip="false">
    <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Left">
        <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Right">
            @if (selectedNotifications.Any())
            {
                <FluentButton Appearance="Appearance.Lightweight" IconStart="@(new Size20.CommentMultipleCheckmark())">@loc["MarkAsReadButton"]</FluentButton>
            }
            <FluentButton Appearance="Appearance.Lightweight" IconStart="@(new Size20.Dismiss())"
                          OnClick="HandleCancelClickAsync" />
        </FluentStack>
        <FluentLabel Typo="Typography.PaneHeader">@loc["NotificationsPanelTitle"]</FluentLabel>
    </FluentStack>
</FluentDialogHeader>

<FluentDialogBody>

</FluentDialogBody>

<FluentDialogFooter Visible="false" />

@code {

    /// <summary>
    ///     The dialog object bound to this component.
    /// </summary>
    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    /// <summary>
    ///     Necessary data to display the dialog.
    /// </summary>
    [Parameter]
    public required ClaimsPrincipal Content { get; set; }

    private readonly HashSet<NotificationResponseDto> selectedNotifications = [];

    private async Task HandleCancelClickAsync()
    {
        await Dialog.CancelAsync();
    }
}